{
  "compilerOptions": {
    "target": "es5",                          /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */
    "module": "esnext",                       /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    "lib": ["dom", "es2015"],                 /* Specify library files to be included in the compilation. */
    // tell TS to transpile vanilla JS files
    "allowJs": true,                          /* Allow javascript files to be compiled. */
    "checkJs": true,
    "jsx": "react",                           /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    "outDir": "./dist",                       /* Redirect output structure to the directory. */
    // we're gonna use tslob for reusing module imports for helpers like:
    // __extends, __spread -> for old browsers less JS === more happy users
    "importHelpers": true,                    /* Import emit helpers from 'tslib'. */
    "moduleResolution": "node",               /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    // we're gonna turn synthetic default imports normalization for react types
    "allowSyntheticDefaultImports": true,     /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true,                   /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    // STRICT, THERE IS NO LIFE OUTSIDE STRICT MODE !!!
    "strict": true,
    "sourceMap": true
  },
  "include": ["src"]
}
